% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unscale_MRFcoefs.R
\name{unscale_MRFcoefs}
\alias{unscale_MRFcoefs}
\title{Convert regression coefficients for Poisson or Gaussian nodes back to
their original scale}
\usage{
unscale_MRFcoefs(MRF_mod)
}
\arguments{
\item{MRF_mod}{A fitted \code{MRFcov} or \code{bootstrap_MRF} object}
}
\value{
A \code{list} containing all of the original elements of the model, with
direct node-node coefficients now converted back to their original scales. Note that for
\code{bootstrap_MRF} models, item \code{mean_key_coefs} will still be presented using scaled
coefficients, as this makes direct comparisons between coefficients simple and straightforward.
}
\description{
This function uses outputs from \code{\link{MRFcov}}
and \code{\link{bootstrap_MRF}} models fitted with \code{poisson} or \code{gaussian}
node variables to convert direct node-node coefficients back to their original scale.
}
\details{
Coefficients for models fitted with \code{poisson} or \code{gaussian} node variables
represent scaled coefficients so that all parameters are directly comparable. This is
very useful for comparing all parameters in the model, but can make
interpretation of effect sizes (i.e. how much does abundance of sp.1 impact abundance of sp.2?)
difficult. This function converts coefficients back to the original scales of the node variables,
making predictions and interpretations more straightforward.
}
\examples{
# Fake species abundances (poisson)
sp.1 <- rpois(100, 3)
sp.2 <- sp.1*2 + rnorm(1, 0, 1)
sp.3 <- rpois(100, 2)
sp.4 <- sp.3*4.5 + rnorm(1, 0, 1.2)

# Fake scaled continuous covariate
cov <- rnorm(100, 0, 1)

data = data.frame(sp.1 = sp.1, sp.2 = sp.2, sp.3 = sp.3, sp.4 = sp.4, cov = cov)

# Fit the model
mod <- MRFcov(data = data, n_nodes = 4, family = "poisson")

# Check scaled coefficients
mod$graph

# Convert back to original scale
unscaled.mod <- unscale_MRFcoefs(mod)

# Check unscaled coefficients
unscaled.mod$graph

}
